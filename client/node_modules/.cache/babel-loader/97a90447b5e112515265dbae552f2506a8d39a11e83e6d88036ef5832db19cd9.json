{"ast":null,"code":"import * as yup from \"yup\";\nimport { parseDateString } from \"./helpers/ParseDate\";\nconst today = new Date();\nconst URIRegExp = /^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*)$/i;\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport const registrSchema = yup.object().shape({\n  avatarUrl: yup.lazy(value => /^data/.test(value) ? yup.string().trim().matches(URIRegExp, \"Must be a valid data URI\").required() : yup.string().trim().url(\"Must be a valid URL\").optional()),\n  fullName: yup.string().required(\"No name provided\").min(2, \"Name is too short - should be 2 chars minimum.\"),\n  email: yup.string().email(\"Must be a valid email\").required(\"Email is required\"),\n  password: yup.string().required(\"No password provided\").min(8, \"Password is too short - should be 8 chars minimum.\")\n});\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email(\"Must be a valid email\").required(\"Email is required\"),\n  password: yup.string().required(\"No password provided\").min(8, \"Password is too short - should be 8 chars minimum.\")\n});\nexport const editDataSchema = yup.object().shape({\n  fullName: yup.string().optional().min(2, \"Name is too short - should be 2 chars minimum.\"),\n  email: yup.string().email(\"Must be a valid email\").optional(),\n  birthday: yup.date().transform(parseDateString).max(today, `Date must be earlier ${today.toString().slice(10, 15)}`).optional()\n});\nexport const addressSchema = yup.object().shape({\n  lastName: yup.string().required(\"No last name provided.\").min(2, \"Last name is too short - should be 2 chars minimum.\"),\n  name: yup.string().required(\"No name provided.\").min(2, \"Name is too short - should be 2 chars minimum.\"),\n  surname: yup.string().required(\"No surname provided.\").min(2, \"Surname is too short - should be 2 chars minimum.\"),\n  postIndex: yup.number().required(\"No post index provided.\").min(3, \"Post index is too short.\"),\n  region: yup.string().required(\"No region provided.\"),\n  street: yup.string().required(\"No street provided.\"),\n  city: yup.string().required(\"No city provided.\"),\n  phoneNumber: yup.string().required(\"No phone number provided.\").matches(phoneRegExp, \"Invalid phone number\"),\n  email: yup.string().email().min(10, \"Phone number is too short\").required(\"No email provided.\")\n});","map":{"version":3,"names":["yup","parseDateString","today","Date","URIRegExp","phoneRegExp","registrSchema","object","shape","avatarUrl","lazy","value","test","string","trim","matches","required","url","optional","fullName","min","email","password","loginSchema","editDataSchema","birthday","date","transform","max","toString","slice","addressSchema","lastName","name","surname","postIndex","number","region","street","city","phoneNumber"],"sources":["/Users/macair/Documents/Codding/Projects/sneakers_store/client/src/schemas.js"],"sourcesContent":["import * as yup from \"yup\";\nimport { parseDateString } from \"./helpers/ParseDate\";\n\nconst today = new Date();\n\nconst URIRegExp =\n  /^data:([a-z]+\\/[a-z0-9-+.]+(;[a-z-]+=[a-z0-9-]+)?)?(;base64)?,([a-z0-9!$&',()*+;=\\-._~:@/?%\\s]*)$/i;\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport const registrSchema = yup.object().shape({\n  avatarUrl: yup.lazy((value) =>\n    /^data/.test(value)\n      ? yup\n          .string()\n          .trim()\n          .matches(URIRegExp, \"Must be a valid data URI\")\n          .required()\n      : yup.string().trim().url(\"Must be a valid URL\").optional()\n  ),\n  fullName: yup\n    .string()\n    .required(\"No name provided\")\n    .min(2, \"Name is too short - should be 2 chars minimum.\"),\n  email: yup\n    .string()\n    .email(\"Must be a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"No password provided\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Must be a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"No password provided\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\n});\n\nexport const editDataSchema = yup.object().shape({\n  fullName: yup\n    .string()\n    .optional()\n    .min(2, \"Name is too short - should be 2 chars minimum.\"),\n  email: yup.string().email(\"Must be a valid email\").optional(),\n  birthday: yup\n    .date()\n    .transform(parseDateString)\n    .max(today, `Date must be earlier ${today.toString().slice(10, 15)}`)\n    .optional(),\n});\n\nexport const addressSchema = yup.object().shape({\n  lastName: yup\n    .string()\n    .required(\"No last name provided.\")\n    .min(2, \"Last name is too short - should be 2 chars minimum.\"),\n  name: yup\n    .string()\n    .required(\"No name provided.\")\n    .min(2, \"Name is too short - should be 2 chars minimum.\"),\n  surname: yup\n    .string()\n    .required(\"No surname provided.\")\n    .min(2, \"Surname is too short - should be 2 chars minimum.\"),\n  postIndex: yup\n    .number()\n    .required(\"No post index provided.\")\n    .min(3, \"Post index is too short.\"),\n  region: yup.string().required(\"No region provided.\"),\n  street: yup.string().required(\"No street provided.\"),\n  city: yup.string().required(\"No city provided.\"),\n  phoneNumber: yup\n    .string()\n    .required(\"No phone number provided.\")\n    .matches(phoneRegExp, \"Invalid phone number\"),\n  email: yup\n    .string()\n    .email()\n    .min(10, \"Phone number is too short\")\n    .required(\"No email provided.\"),\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}