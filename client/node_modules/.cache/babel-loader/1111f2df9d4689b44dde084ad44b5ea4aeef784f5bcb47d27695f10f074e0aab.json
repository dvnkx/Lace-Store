{"ast":null,"code":"import * as yup from \"yup\";\nexport const registrSchema = yup.object().shape({\n  avatarUrl: yup.string().matches(/((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/).optional(\"Enter correct url\"),\n  fullName: yup.string().required(\"No name provided\").min(2, \"Password is too short - should be 2 chars minimum.\"),\n  email: yup.string().email(\"Must be a valid email\").required(\"Email is required\"),\n  password: yup.string().required(\"No password provided\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\n});\nexport const loginSchema = yup.object().shape({\n  email: yup.string().email(\"Must be a valid email\").required(\"Email is required\"),\n  password: yup.string().required(\"No password provided\").min(8, \"Password is too short - should be 8 chars minimum.\").matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\")\n});","map":{"version":3,"names":["yup","registrSchema","object","shape","avatarUrl","string","matches","optional","fullName","required","min","email","password","loginSchema"],"sources":["/Users/macair/Documents/Codding/Projects/sneakers_store/client/src/schemas.js"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const registrSchema = yup.object().shape({\n  avatarUrl: yup\n    .string()\n    .matches(\n      /((https?):\\/\\/)?(www.)?[a-z0-9]+(\\.[a-z]{2,}){1,3}(#?\\/?[a-zA-Z0-9#]+)*\\/?(\\?[a-zA-Z0-9-_]+=[a-zA-Z0-9-%]+&?)?$/\n    )\n    .optional(\"Enter correct url\"),\n  fullName: yup\n    .string()\n    .required(\"No name provided\")\n    .min(2, \"Password is too short - should be 2 chars minimum.\"),\n  email: yup\n    .string()\n    .email(\"Must be a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"No password provided\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Must be a valid email\")\n    .required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"No password provided\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n});\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,OAAO,MAAMC,aAAa,GAAGD,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC9CC,SAAS,EAAEJ,GAAG,CACXK,MAAM,CAAC,CAAC,CACRC,OAAO,CACN,iHACF,CAAC,CACAC,QAAQ,CAAC,mBAAmB,CAAC;EAChCC,QAAQ,EAAER,GAAG,CACVK,MAAM,CAAC,CAAC,CACRI,QAAQ,CAAC,kBAAkB,CAAC,CAC5BC,GAAG,CAAC,CAAC,EAAE,oDAAoD,CAAC;EAC/DC,KAAK,EAAEX,GAAG,CACPK,MAAM,CAAC,CAAC,CACRM,KAAK,CAAC,uBAAuB,CAAC,CAC9BF,QAAQ,CAAC,mBAAmB,CAAC;EAChCG,QAAQ,EAAEZ,GAAG,CACVK,MAAM,CAAC,CAAC,CACRI,QAAQ,CAAC,sBAAsB,CAAC,CAChCC,GAAG,CAAC,CAAC,EAAE,oDAAoD,CAAC,CAC5DJ,OAAO,CAAC,UAAU,EAAE,0CAA0C;AACnE,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGb,GAAG,CAACE,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC5CQ,KAAK,EAAEX,GAAG,CACPK,MAAM,CAAC,CAAC,CACRM,KAAK,CAAC,uBAAuB,CAAC,CAC9BF,QAAQ,CAAC,mBAAmB,CAAC;EAChCG,QAAQ,EAAEZ,GAAG,CACVK,MAAM,CAAC,CAAC,CACRI,QAAQ,CAAC,sBAAsB,CAAC,CAChCC,GAAG,CAAC,CAAC,EAAE,oDAAoD,CAAC,CAC5DJ,OAAO,CAAC,UAAU,EAAE,0CAA0C;AACnE,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}